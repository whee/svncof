#!/usr/bin/env bash
# Copyright (c) 2009, Brian Hetro <whee@smaertness.net>

# Verify agrep is available. If not, bail.
type -P agrep &>/dev/null || \
    { echo "Agrep from TRE is required. Aborting." >&2; exit 1; }

function repo_list
{
    for d in $(svn ls $1 | grep '/$'); do
	svn ls $1/$d | sed -e "s#^#$1/$d#"
    done | grep '/$'
}

function get_rooturi
{
 echo "This is your first usage of svncof. Specify a root URI to start with."
 echo "e.g., svn://a-server/path/to/project/root:"
 echo
 read -e -p "Root URI: " ROOTURI
 echo
 echo "The URI ${ROOTURI} would complete results like these:"
 echo
 repo_list ${ROOTURI} | head -n 5
}

# Check if there are any root URIs in ~/.svncof
if ! test -s ~/.svncof; then
## None? Prompt for one.
    while test "${USEREXPECTED}" != "y" -a "${USEREXPECTED}" != "Y"; do
	get_rooturi
	echo
	read -e -p "Is this what you expect? [y/N] " USEREXPECTED
	echo
    done
    echo "${ROOTURI}" > ~/.svncof
fi

# svn ls root URIs, recursively, three deep. Gather these.

# Do something like this to match URIs. These arguments are obviously incorrect.
# agrep -i -E 100 -D 10 -I 1 -S 10 -B --color -s 'filter' (svn ls http://svn.collab.net/repos/svn/branches | sed 's#^#http://svn.collab.net/repos/svn/branches/#'|psub)

# If more than one match, list a few and bail.
##" '<user-input>' has # matches. Be more specific.
##"
##" ...list some matches...

# If one match, use it. No prompts or delays.
