#!/usr/bin/env bash
# Copyright (c) 2009, Brian Hetro <whee@smaertness.net>
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 
# Verify agrep is available. If not, bail.
type -P agrep &>/dev/null || \
    { echo "Agrep from TRE is required. Aborting." >&2; exit 1; }

function repo_list
{
    for repo in "$@"; do
	for d in $(svn ls ${repo} | grep '/$'); do
	    svn ls ${repo}/$d | sed -e "s#^#${repo}/$d#"
	done | grep '/$'
    done
}

function get_rooturi
{
 echo "This is your first usage of svncof. Specify a root URI to start with."
 echo "e.g., svn://a-server/path/to/project/root:"
 echo
 read -e -p "Root URI: " ROOTURI
 echo
 echo "The URI ${ROOTURI} would complete results like these:"
 echo
 repo_list ${ROOTURI} | head -n 5
}

# Check if there are any root URIs in ~/.svncof
if ! test -s ~/.svncof; then
## None? Prompt for one.
    while test "${USEREXPECTED}" != "y" -a "${USEREXPECTED}" != "Y"; do
	get_rooturi
	echo
	read -e -p "Is this what you expect? [y/N] " USEREXPECTED
	echo
    done
    echo "${ROOTURI}" > ~/.svncof
fi

# Need a couple of temporary files for the svn repo path list, and any
# resulting matches. Agrep's -B option really doesn't like anything
# other than a plain file.
PATHLIST=$(mktemp -t svncof.XXXXXXXXXX) || \
    { echo "Could not create temporary file. Aborting." >&2; exit 1; }
RESULT=$(mktemp -t svncof.XXXXXXXXXX) || \
    { echo "Could not create temporary file. Aborting." >&2; exit 1; }

# Generate a list of possible paths.
repo_list $(cat ~/.svncof) > ${PATHLIST}

# Match the user's input filter against the possible paths.
agrep -i -E 100 -D 10 -I 1 -S 10 -B "$*" ${PATHLIST} > ${RESULT}

rm -f ${PATHLIST}

# Only do anything if there is exactly one match. More than one result
# needs a more specific input.
NUMRESULTS=$(wc -l <${RESULT})

if test ${NUMRESULTS} -eq 0; then
    echo "No path matched. Be less specific."
    rm -f ${RESULT}
    exit 3
fi

if test ${NUMRESULTS} -gt 1; then
    echo "More than one path matched. Be more specific."
    echo
    cat ${RESULT}
    rm -f ${RESULT}
    exit 2
fi

COPATH=$(cat ${RESULT})
rm -f ${RESULT}

# If we are inside an existing Subversion working copy, issue a switch
# instead of a checkout.
if test -d .svn; then
    echo -n "Switching to ${COPATH}"
    SVNOPERATION=switch
else
    echo -n "Checking out ${COPATH}"
    SVNOPERATION=checkout
fi

# Wait ${INDECISIONDELAY} seconds to give some time to C-c if the path
# is wrong.
INDECISIONDELAY=3
I=1
while test $I -le ${INDECISIONDELAY}; do
    echo -n "."
    sleep 1
    I=$(( I + 1 ))
done

# Finally, checkout or switch to the matched path.
echo
svn ${SVNOPERATION} ${COPATH}
